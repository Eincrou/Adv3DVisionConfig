<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" >
	<LinearGradientBrush x:Key="TabBorderBackgroundBrush"  EndPoint="0.65,1.87" StartPoint="0,0">
		<GradientStop Color="#FF111216" Offset="0.51"/>
		<GradientStop Color="#FF131719" Offset="0.527"/>
	</LinearGradientBrush>
	<Style TargetType="{x:Type TabItem}">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="Foreground" Value="#FFD7DCDB"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FF595959" Offset="0.35"/>
					<GradientStop Color="#FF1F1F1F" Offset="0.6"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid>
						<Border x:Name="Border" Margin="0,0,0,0" CornerRadius="3,3,0,0" >
							<ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="8,2,8,2" RecognizesAccessKey="True"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Panel.ZIndex" Value="100" />
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FF92CA00" Offset="0.356"/>
										<GradientStop Color="#FF4FA01C" Offset="0.594"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsSelected" Value="False">
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FF595959" Offset="0.351"/>
										<GradientStop Color="#FF1F1F1F" Offset="0.607"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,1">
										<GradientStop Color="#FF232323" Offset="0.569"/>
										<GradientStop Color="#FF787E8F" Offset="0.197"/>
										<GradientStop Color="#FF636874" Offset="0.87"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Padding" Value="0,1,6,-5"/>
	</Style>

	<Style TargetType="{x:Type Button}" x:Key="GreenButton">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="#FFA5DF3B" Offset="0.2"/>
					<GradientStop Color="#FF4D9500" Offset="0.852"/>
					<GradientStop Color="#FF98C75F" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="Black" Offset="0.919" />
					<GradientStop Color="#FFEEFFED" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="2"/>
	</Style>

	<Style TargetType="{x:Type TextBox}" x:Key="textbox">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="#FF323232"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
					<GradientStop Color="#FFABADB3" Offset="0.05"/>
					<GradientStop Color="#FFE2E3EA" Offset="0.07"/>
					<GradientStop Color="#FFE3E9EF" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="SelectionBrush" Value="GreenYellow"/>
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="GreenYellow"/>
				<Setter Property="BorderThickness" Value="1"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F3F3F3" Offset="0"/>
		<GradientStop Color="#EBEBEB" Offset="0.5"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#CDCDCD" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
	<LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
		<GradientStop Color="#ABADB3" Offset="0.05"/>
		<GradientStop Color="#E2E3EA" Offset="0.07"/>
		<GradientStop Color="#E3E9EF" Offset="1"/>
	</LinearGradientBrush>	

	<Style x:Key="RefreshButton" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="RefreshButtonClick">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="180">
									<EasingDoubleKeyFrame.EasingFunction>
										<QuarticEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="RefreshButtonMouseEnter">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Layer_1">
								<EasingDoubleKeyFrame KeyTime="0" Value="1">
									<EasingDoubleKeyFrame.EasingFunction>
										<BackEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Layer_1">
								<EasingDoubleKeyFrame KeyTime="0" Value="1">
									<EasingDoubleKeyFrame.EasingFunction>
										<BackEase EasingMode="EaseOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="RefreshButtonMouseLeave">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Layer_1">
								<EasingDoubleKeyFrame KeyTime="0" Value="1.1"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Layer_1">
								<EasingDoubleKeyFrame KeyTime="0" Value="1.2"/>
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Canvas x:Name="Layer_1" Height="16" Width="16" RenderTransformOrigin="0.5,0.5" Background="#00000000">
						<Canvas.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Canvas.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
											<EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FFC9FF76"/>
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path">
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.2"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path">
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1.2"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
											<EasingColorKeyFrame KeyTime="0" Value="#FF66951E"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
											<EasingColorKeyFrame KeyTime="0:0:0.3" Value="#FFB2B2B2"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Canvas RenderTransformOrigin="0.5,0.5">
							<Canvas.RenderTransform>
								<TransformGroup>
									<ScaleTransform ScaleX="0.67" ScaleY="0.66"/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Path x:Name="path" Fill="GreenYellow" Height="24.122" Canvas.Left="0" Canvas.Top="0" Width="23.638"
								Data="M21.263212,0.35199237 C21.263212,0.35199237 19.938212,1.6449924 19.020212,2.5529924 14.333212,-0.87100763 7.7282119,-0.48300763 3.4952119,3.7499924 1.0252119,6.2199924 -0.12778814,9.4969924 0.011211864,12.732992 L4.0112119,12.732992 C3.8702119,10.520992 4.6292119,8.2659924 6.3192119,6.5749924 8.9822119,3.9119924 13.054212,3.5319924 16.131212,5.4129924 15.089212,6.4449924 13.886212,7.6509924 13.886212,7.6509924 13.045212,8.6599924 13.990212,9.2429924 14.470212,9.2279924 L20.094212,9.2269924 C20.391212,9.2269924 20.633212,9.2279924 20.633212,9.2279924 L21.176212,9.2279924 22.268212,9.2279924 C22.566212,9.2279924 22.808212,8.9849924 22.808212,8.6869924 L22.808212,0.95599237 C22.842212,0.24899237 22.066212,-0.43700763 21.263212,0.35199237 M2.3742119,23.769992 C2.3742119,23.769992 3.7002119,22.476992 4.6172119,21.568992 9.3052119,24.992992 15.909212,24.604992 20.143212,20.371992 22.613212,17.900992 23.765212,14.624992 23.627212,11.388992 L19.626212,11.388992 C19.768212,13.599992 19.009212,15.855992 17.318212,17.547992 14.655212,20.209992 10.583212,20.590992 7.5062119,18.708992 8.5482119,17.676992 9.7512119,16.470992 9.7512119,16.470992 10.592212,15.460992 9.6472119,14.878992 9.1672119,14.893992 L3.5432119,14.895992 C3.2462119,14.895992 3.0032119,14.893992 3.0032119,14.893992 L2.4602119,14.893992 1.3702119,14.893992 C1.0722119,14.893992 0.83021186,15.135992 0.82921186,15.434992 L0.82921186,23.166992 C0.79621186,23.872992 1.5722119,24.558992 2.3742119,23.769992" Stretch="Fill" RenderTransformOrigin="0.5,0.5" >
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="180"/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
						</Canvas>
					</Canvas>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="ButtonBase.Click">
							<BeginStoryboard Storyboard="{StaticResource RefreshButtonClick}"/>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>
	<Color x:Key="InputBackgroundColor">#FF17191B</Color>
	<SolidColorBrush x:Key="InputForegroundBrush" Color="#FFE4E4E4"/>
	<Style TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{DynamicResource InputForegroundBrush}"/>
		<Setter Property="Background" Value="#FF17191B"/>
		<Setter Property="BorderThickness" Value="2"/>
		<Setter Property="SelectionBrush" Value="#FF46FF33"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" BorderBrush="#FFE3E9EF">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused">
									<Storyboard>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="border">
											<EasingThicknessKeyFrame KeyTime="0" Value="2"/>
										</ThicknessAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="YellowGreen"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="Red"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
											<EasingColorKeyFrame KeyTime="0" Value="DarkRed"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
					<Condition Property="IsSelectionActive" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
			</MultiTrigger>
		</Style.Triggers>
	</Style>
	<SolidColorBrush x:Key="InputBackgroundBrush" Color="{DynamicResource InputBackgroundColor}"/>
	<SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
	<Style TargetType="{x:Type TabControl}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Padding" Value="4,4,4,4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
		<Setter Property="Background" Value="#F9F9F9"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>							
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition Height="3"/> 
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>						
						<TabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="0,2,2,-1" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
						<Canvas Grid.Row="1" Grid.ColumnSpan="2" Margin="0" Background="#FF4FA01C"/>
						<Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="2" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	

	<!-- Simple CheckBox -->
		<Style x:Key="CheckBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		<Style TargetType="{x:Type CheckBox}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
			<Setter Property="Background" Value="#FF15181B"/>
			<Setter Property="BorderBrush" Value="#FF4D4D4D"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
					
					<!-- BulletDecorator is used to provide baseline alignment between the checkmark and the Content -->
						<BulletDecorator Background="Transparent">
							<BulletDecorator.Bullet>
								<Grid Width="13" Height="13">
									<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
									<Path x:Name="CheckMark" Stroke="YellowGreen" StrokeThickness="2" SnapsToDevicePixels="False" Data="M0.99999997,5.6342377 L5.1259376,10.465506 10.542567,0.99999999" Margin="0.862,0.529,0.595,1.005"/>
								</Grid>
							</BulletDecorator.Bullet>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
						</BulletDecorator>
					
					<!-- This uses Visibility to hide and show the CheckMark on IsChecked -->
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="false">
								<Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Stroke" TargetName="CheckMark" Value="#FFBBD682"/>
								<Setter Property="StrokeThickness" TargetName="CheckMark" Value="3"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="true">
								<Setter Property="Background" TargetName="Border" Value="#FF616161"/>
								<Setter Property="BorderBrush" TargetName="Border" Value="YellowGreen"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Stroke" TargetName="CheckMark" Value="#FFC4C9BB"/>
								<Setter Property="Background" TargetName="Border" Value="#FF666666"/>
								<Setter Property="BorderBrush" TargetName="Border" Value="#AAA"/>
							</Trigger>
						</ControlTemplate.Triggers>
					
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ComboBoxFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

</ResourceDictionary>